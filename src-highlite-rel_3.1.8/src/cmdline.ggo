# Copyright (C) 1999-2007  Lorenzo Bettini, http://www.lorenzobettini.it

# This file is used by gengetopt to generate a command line args parser
# GNU gengetopt can be found at
# http://www.gnu.org/software/gengetopt

purpose "Highlight the syntax of a source file (e.g. Java) into a specific format (e.g. HTML)"
usage 
" [OPTIONS]... < input_file > output_file\n       source-highlight [OPTIONS]... -i input_file -o output_file\n       source-highlight [OPTIONS]... [FILES]..."

# Options
option "input"          i  "input file. default std input"      string  typestr="filename"   no
option "output"         o  "output file. default std output (when the third invocation form is used). If STDOUT is specified, the output is directed to standard output"      string  typestr="filename"   no

text "
you can simply specify some files at the command line and \
also use regular expressions (for instance \
*.java).  In this case the name for the output files \
will be formed using the name of the source file with \
a .<ext> appended, where \
<ext> is the extension chosen according to the output format specified \
(for instance .html).
"

option "src-lang"       s  "source language (use --lang-list to get the complete list).  If not specified, the source language will be guessed from the file extension." string no
option "lang-list"      -  "list all the supported language and associated language definition file" no
option "outlang-list"   -  "list all the supported output language and associated language definition file" no
option "out-format"     f  "output format (use --outlang-list to get the complete list)" string default="html" no
option "doc"            d  "create an output file that can be used as a stand alone document (e.g., not to be included in another one)" no
option "no-doc"         -  "cancel the --doc option even if it is implied (e.g., when css is given)" no
option "css"            c  "the external style sheet filename.  Implies --doc" string typestr="filename" no
option "title"          T  "give a title to the output document.  Implies --doc" string no
option "tab"            t  "specify tab length." int default="8"   no
option "header"         H  "file to insert as header" string typestr="filename" no
option "footer"         F  "file to insert as footer" string typestr="filename" no
option "style-file"      -  "specify the file containing format options" string typestr="filename" default="default.style" optional
option "style-css-file"      -  "specify the file containing format options (in css syntax)" string typestr="filename" optional
option "style-defaults" - "specify the file containing defaults for format options" string typestr="filename" default="style.defaults" optional
option "outlang-def" - "output language definition file" string typestr="filename" no
option "outlang-map" - "output language map file" string typestr="filename" default="outlang.map" no
option "data-dir" - "directory where language definition files and language maps are searched for.  If not specified these files are searched for in the current directory and in the data dir installation directory" string typestr="path" no
option "output-dir"     -  "output directory" string typestr="path" no
option "lang-def" - "language definition file" string typestr="filename" no
option "lang-map" - "language map file" string typestr="filename" default="lang.map" no
option "show-lang-elements" - "prints the language elements that are defined in the language definition file" optional string typestr="filename"
option "infer-lang" - "force to infer source script language (overriding given language specification)" optional

section "Lines"

option "line-number"    n  "number all output lines, using the specified padding character" string typestr="padding" default="0" no argoptional
option "line-number-ref"    -  "number all output lines and generate an anchor, made of the specified prefix + the line number" string typestr="prefix" default="line" no argoptional

section "Filtering output"

defmode "linerange" modedesc="specifying line ranges"
defmode "regexrange" modedesc="specifying regular expression delimited ranges"

modeoption "line-range" - "generate only the lines in the specified range(s)" 
	details="each range can be of the shape: 
	single line (e.g., --line-range=50)
	full range (e.g., --line-range=2-10)
	partial range (e.g., --line-range=-30, first 30 lines, 
	--line-range=40- from line 40 to the end
"
	string multiple optional
	mode="linerange"

modeoption "range-separator" - "the optional separator to be printed among ranges (e.g., \"...\")" 
	string optional
	dependon="line-range"
	mode="linerange"

modeoption "range-context" - "number of (context) lines generated even if not in range" int optional
	details="The optional --range-context specifies the number of lines that are not in
	range that will be printed anyway (before and after the lines in range);
	These lines will be formatted according to the \"context\" style.
" 
	dependon="line-range"
	mode="linerange"

modeoption "regex-range" - "generate only the lines within the specified regular expressions"
	details="when a line containing the specified regular expression is found, then
the lines after this one are actually generated, until another line, 
containing the same regular expression is found (this last line is not generated).
More than one regular expression can be specified."
	string multiple optional
	mode="regexrange"

section "reference generation"
option "gen-references"    -  "generate references" values="inline","postline","postdoc" default="inline" no
option "ctags-file"      -  "specify the file generated by ctags that will be used to generate references" string typestr="filename" default="tags" no
option "ctags"      -  "how to run the ctags command.  If this option is not specified, ctags will be executed with the default value.  If it is specified with an empty string, ctags will not be executed at all" string typestr="cmd" default="ctags --excmd=n --tag-relative=yes" no

section "testing"
option "verbose"        v  "verbose mode on" optional
option "quiet"          q  "print no progress information" optional
option "binary-output" - "write output files in binary mode" optional
	details="This is useful for testing purposes, since you may want to make
sure that output files are always generated with a final newline character only"
option "statistics" - "print some statistics (i.e., elapsed time)" optional
option "gen-version" - "put source-highlight version in the generated file" flag on
option "check-lang" - "only check the correctness of a language definition file" string typestr="filename" no
option "check-outlang" - "only check the correctness of an output language definition file" string typestr="filename" no
option "failsafe" - "if no language definition is found for the input, it is simply copied to the output" no
option "debug-langdef" g "debug a language definition.  In dump mode just dumps all the steps; in interactive, at each step, waits for some input (press ENTER to step)" optional argoptional values="interactive","dump" default="dump" typestr="type"
option "show-regex" - "show the regular expression automaton corresponding to a language definition file" string typestr="filename" no

